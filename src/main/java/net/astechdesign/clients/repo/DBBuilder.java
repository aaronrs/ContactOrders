package net.astechdesign.clients.repo;

import org.apache.commons.dbutils.QueryRunner;
import org.apache.commons.dbutils.ResultSetHandler;

import javax.sql.DataSource;
import java.io.IOException;
import java.net.URL;
import java.sql.ResultSet;
import java.sql.SQLException;

public class DBBuilder {

    private static String[] SEQUENCE_NAMES = {"CONTACT_SEQ", "ORDER_SEQ", "CATEGORY_SEQ", "TODO_SEQ"};

    public static void initialiseDb(DataSource dataSource) {
        scripted(dataSource);
    }

    public static void main(String[] args) throws IOException {
        loader(null);
    }

    public static void loader(DataSource dataSource) throws IOException {
        URL resource = Thread.currentThread().getContextClassLoader().getResource("db");
        Tables tables = new Tables(resource);

        for (Table table : tables.get()) {

        }


        QueryRunner queryRunner = new QueryRunner(dataSource);
        try {
            Boolean isInitialised = queryRunner.query("select * from dbInit", new ResultSetHandler<Boolean>() {
                @Override
                public Boolean handle(ResultSet rs) throws SQLException {
                    rs.next();
                    return rs.getBoolean(1);
                }
            });
            if (isInitialised) return;
        } catch (Exception e) {
//            e.printStackTrace();
        }

    }

    public static void scripted(DataSource dataSource) {
        QueryRunner queryRunner = new QueryRunner(dataSource);
        try {
            Boolean isInitialised = queryRunner.query("select * from dbInit", new ResultSetHandler<Boolean>() {
                @Override
                public Boolean handle(ResultSet rs) throws SQLException {
                    rs.next();
                    return rs.getBoolean(1);
                }
            });
            if (isInitialised) return;
        } catch (Exception e) {
//            e.printStackTrace();
        }
        try {
            for (String name : SEQUENCE_NAMES) {

                queryRunner.update("CREATE SEQUENCE " + name);
            }

            queryRunner.update("CREATE TABLE contacts(" +
                    "id INT GENERATED BY DEFAULT AS SEQUENCE CONTACT_SEQ PRIMARY KEY," +
                    "first VARCHAR(25)," +
                    "last VARCHAR(50)," +
                    "number INT," +
                    "houseName VARCHAR(20)," +
                    "address1 VARCHAR(60)," +
                    "town VARCHAR(30)," +
                    "county VARCHAR(20)," +
                    "postcode VARCHAR(10)," +
                    "telephone VARCHAR(15)" +
                    ")");

            queryRunner.update("CREATE TABLE orders(" +
                    "id INT GENERATED BY DEFAULT AS SEQUENCE ORDER_SEQ PRIMARY KEY," +
                    "contactId INT," +
                    "year INT," +
                    "month INT," +
                    "day INT," +
                    "amount INT," +
                    "productId INT" +
                    ")");

            queryRunner.update("CREATE TABLE products(" +
                    "id INT PRIMARY KEY," +
                    "categoryId INT," +
                    "name VARCHAR(100)," +
                    "description VARCHAR(450)" +
                    ")");

            queryRunner.update("CREATE TABLE categories(" +
                    "id INT GENERATED BY DEFAULT AS SEQUENCE CATEGORY_SEQ PRIMARY KEY," +
                    "category VARCHAR(25)" +
                    ")");

            queryRunner.update("CREATE TABLE todoList(" +
                    "id INT GENERATED BY DEFAULT AS SEQUENCE TODO_SEQ PRIMARY KEY," +
                    "contactId INT," +
                    "start DATE," +
                    "end DATE," +
                    "notes VARCHAR(500)" +
                    ")");

            queryRunner.update("CREATE TABLE dbInit(init BOOLEAN)");
            queryRunner.update("insert into dbInit values('true')");
        } catch (Exception e) {
            throw new RuntimeException("", e);
        }
    }


}